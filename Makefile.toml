[tasks.clean-all]
description = "Remove and binaries from previous builds"
script = [
    "cargo clean",
    "rm -rf python/keplemon/*.so",
    "rm -rf python/keplemon/*.dylib",
    "rm -rf python/keplemon/*.dll",
    "rm -rf python/keplemon/assets/*",
    "rm -rf python/keplemon/*.pyi",
    "cp assets/* python/keplemon/assets/",
    "cp stubs/keplemon/*.pyi python/keplemon/",
]

[tasks.copy-mac-arm]
description = "Copy the SAAL binaries for macOS ARM"
script = ["cp lib/mac/arm/* python/keplemon/"]
dependencies = ["clean-all"]

[tasks.copy-mac-amd]
description = "Copy the SAAL binaries for macOS AMD"
script = ["cp lib/mac/amd/* python/keplemon/"]
dependencies = ["clean-all"]

[tasks.copy-linux-arm]
description = "Copy the SAAL binaries for Linux ARM"
script = ["cp lib/linux/arm/* python/keplemon/"]
dependencies = ["clean-all"]

[tasks.copy-linux-amd]
description = "Copy the SAAL binaries for Linux AMD"
script = ["cp lib/linux/amd/* python/keplemon/"]
dependencies = ["clean-all"]

[tasks.copy-windows]
description = "Copy the SAAL binaries for Windows"
script = ["cp lib/windows/* python/keplemon/"]
dependencies = ["clean-all"]

[tasks.build-mac-arm]
description = "Build the wheel for macOS ARM"
script = ["maturin build --release"]
dependencies = ["copy-mac-arm"]

[tasks.build-mac-amd]
description = "Build the wheel for macOS AMD"
script = ["maturin build --release"]
dependencies = ["copy-mac-amd"]

[tasks.build-linux-arm]
description = "Build the wheel for Linux ARM"
script = [
    "maturin build --release --strip --target aarch64-unknown-linux-musl --compatibility musllinux_1_2",
]
dependencies = ["copy-linux-arm"]

[tasks.build-linux-amd]
description = "Build the wheel for Linux AMD"
script = [
    "maturin build --release --strip --target x86_64-unknown-linux-musl --compatibility musllinux_1_2",
]
dependencies = ["copy-linux-amd"]


[tasks.build-windows]
description = "Build the wheel for Windows"
script = ["maturin build --release"]
dependencies = ["copy-windows"]

[tasks.install-mac-arm]
description = "Install the wheel for macOS ARM"
script = ["pip install --force-reinstall target/wheels/*.whl"]
dependencies = ["build-mac-arm"]

[tasks.install-mac-amd]
description = "Install the wheel for macOS AMD"
script = ["pip install --force-reinstall target/wheels/*.whl"]
dependencies = ["build-mac-amd"]

[tasks.install-linux-arm]
description = "Install the wheel for Linux ARM"
script = ["pip install --force-reinstall target/wheels/*.whl"]
dependencies = ["build-linux-arm"]

[tasks.install-linux-amd]
description = "Install the wheel for Linux AMD"
script = ["pip install --force-reinstall target/wheels/*.whl"]
dependencies = ["build-linux-amd"]

[tasks.install-windows]
description = "Install the wheel for Windows"
script = ["pip install --force-reinstall ."]
dependencies = ["build-windows"]

[tasks.test-mac-arm]
description = "Run the tests for macOS ARM"
command = "pytest"
args = ["-v", "--tb=short", "tests"]
dependencies = ["install-mac-arm"]

[tasks.test-mac-amd]
description = "Run the tests for macOS AMD"
command = "pytest"
args = ["-v", "--tb=short", "tests"]
dependencies = ["install-mac-amd"]

[tasks.test-linux-arm]
description = "Run the tests for Linux ARM"
command = "pytest"
args = ["-v", "--tb=short", "tests"]
dependencies = ["install-linux-arm"]

[tasks.test-linux-amd]
description = "Run the tests for Linux AMD"
command = "pytest"
args = ["-v", "--tb=short", "tests"]
dependencies = ["install-linux-amd"]

[tasks.test-windows]
description = "Run the tests for Windows"
command = "pytest"
args = ["-v", "--tb=short", "tests"]
dependencies = ["install-windows"]

[tasks.publish-mac-arm]
description = "Publish the wheel for macOS ARM"
command = "twine"
args = ["upload", "target/wheels/*"]
dependencies = ["test-mac-arm"]

[tasks.publish-mac-amd]
description = "Publish the wheel for macOS AMD"
command = "twine"
args = ["upload", "target/wheels/*"]
dependencies = ["test-mac-amd"]

[tasks.publish-linux-arm]
description = "Publish the wheel for Linux ARM"
command = "twine"
args = ["upload", "target/wheels/*"]
dependencies = ["test-linux-arm"]

[tasks.publish-linux-amd]
description = "Publish the wheel for Linux AMD"
command = "twine"
args = ["upload", "target/wheels/*"]
dependencies = ["test-linux-amd"]

[tasks.publish-windows]
description = "Publish the wheel for Windows"
command = "twine"
args = ["upload", "target/wheels/*"]
dependencies = ["test-windows"]
