name: Publish Python packages
on:
  workflow_run:
    workflows: ["test"]
    types: [completed]

permissions:
  id-token: write

jobs:
  publish:
    # only if test succeeded
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - name: Download Linux x86 wheel
        uses: actions/download-artifact@v4
        with:
          run-id: ${{ github.event.workflow_run.id }}
          name: linux-amd-${{ matrix.python-version }}-whl
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path: dist/

      - name: Download macOS ARM wheel
        uses: actions/download-artifact@v4
        with:
          run-id: ${{ github.event.workflow_run.id }}
          name: mac-arm-${{ matrix.python-version }}-whl
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path: dist/

      - name: Download macOS x86 wheel
        uses: actions/download-artifact@v4
        with:
          run-id: ${{ github.event.workflow_run.id }}
          name: mac-amd-${{ matrix.python-version }}-whl
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path: dist/

      - name: Download Windows wheel
        uses: actions/download-artifact@v4
        with:
          run-id: ${{ github.event.workflow_run.id }}
          name: windows-${{ matrix.python-version }}-whl
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path: dist/

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install Twine
        run: pip install --upgrade twine

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
