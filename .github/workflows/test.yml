name: test

on:
  push:
    branches:
      - main

jobs:
  test-windows:
    runs-on: windows-latest

    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v3
      - name: setup python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install dependencies
        run: |
          cargo install --locked cargo-make
          pip install ".[dev]"

      - name: Test build
        run: cargo make test-windows

      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          name: windows-${{ matrix.python-version }}-whl
          path: target/wheels/*.whl

  test-linux-amd:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build for ${{ matrix.python-version }}
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/io \
            -e HOME=/root \
            -w /io quay.io/pypa/manylinux2014_x86_64 \
            bash -c '
              yum install -y curl gcc gcc-c++ make python3-pip openssl-devel && \
              export CARGO_HOME="$HOME/.cargo" && export RUSTUP_HOME="$HOME/.rustup" && \
              curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable && \
              source "$CARGO_HOME/env" && \
              cargo install --locked cargo-make && \
              cargo make copy-linux-amd && \
              python${{ matrix.python-version}} -m pip install --upgrade pip setuptools wheel && \
              python${{ matrix.python-version}} -m pip install '.[dev]' && \
              OPENSSL_DIR=/usr/local python${{ matrix.python-version}} -m -m maturin build --release --compatibility manylinux2014
            '

      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          name: linux-amd-${{ matrix.python-version }}-whl
          path: target/wheels/*.whl

  test-macos-arm:
    runs-on: macos-14
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v3
      - name: setup python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install dependencies
        run: |
          cargo install --locked cargo-make
          pip install ".[dev]"

      - name: Test build
        run: cargo make test-mac-arm

      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          name: mac-arm-${{ matrix.python-version }}-whl
          path: target/wheels/*.whl

  test-macos-amd:
    runs-on: macos-13
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v3
      - name: setup python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install dependencies
        run: |
          cargo install --locked cargo-make
          pip install ".[dev]"

      - name: Test build
        run: cargo make test-mac-amd

      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          name: mac-amd-${{ matrix.python-version }}-whl
          path: target/wheels/*.whl
